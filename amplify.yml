version: 1
backend:
  phases:
    preBuild:
      commands:
        # Install main dependencies
        - npm install --cache .npm --prefer-offline --no-audit
        # Install Amplify CLI
        - npm install -g @aws-amplify/cli@latest
        # Install Lambda function dependencies with error handling
        - |
          echo "Installing Lambda function dependencies..."
          find amplify -name "package.json" -not -path "*/node_modules/*" | while read package; do
            dir=$(dirname "$package")
            echo "Installing dependencies in $dir"
            cd "$dir"
            # Check if package.json exists and has dependencies
            if [ -f "package.json" ] && grep -q '"dependencies"' package.json; then
              npm ci --no-audit --prefer-offline || npm install --no-audit
            fi
            cd - > /dev/null
          done
        # Verify installations
        - |
          echo "Verifying Lambda function installations..."
          if [ -d "amplify/auth/post-confirmation" ]; then
            cd amplify/auth/post-confirmation
            ls -la node_modules/@aws-sdk/ || echo "AWS SDK not found in Lambda function"
            cd ../../../
          fi
    build:
      commands:
        - export NODE_ENV=production
        # TypeScript compilation check
        - echo "Checking TypeScript compilation..."
        - |
          if [ -f "amplify/auth/post-confirmation/tsconfig.json" ]; then
            cd amplify/auth/post-confirmation
            npx tsc --noEmit --skipLibCheck || echo "TypeScript check completed with warnings"
            cd ../../../
          fi
        # Deploy backend
        - echo "Deploying backend..."
        - npm run deploy
frontend:
  phases:
    preBuild:
      commands:
        - npm ci --cache .npm --prefer-offline --no-audit
    build:
      commands:
        - npm run build
  artifacts:
    baseDirectory: dist
    files:
      - '**/*'
  cache: 
    paths:
      - .npm/**/*
      - node_modules/**/*
      - amplify/**/node_modules/**/*